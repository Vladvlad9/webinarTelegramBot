import asyncio

from aiogram import types
from aiogram.dispatcher.storage import FSMContext
from aiogram.utils.exceptions import BadRequest

from config import CONFIG
from crud import CRUDUser
from filters import IsAdmin
from keyboards.inline.users.mainFormIKB import main_cb, MainForms
from loader import dp, bot
from schemas import UsersSchema
from states.users.userStates import UserStates


@dp.message_handler(commands=["start"])  # +
async def registration_start(message: types.Message):
    user = await CRUDUser.get(user_id=message.from_user.id)
    text = "–ü—Ä–∏–≤–µ—Ç! –¢—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞ –≤–µ–±–∏–Ω–∞—Ä ¬´–ö–ª–∏–µ–Ω—Ç—ã –∏–∑ –∏–Ω—Å—Ç–∞–≥—Ä–∞–º¬ª, " \
           "–∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–π–¥–µ—Ç 20 –∏—é–Ω—è –≤ 19.00.\n\n" \
           "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –ø—Ä–∏–¥–µ—Ç –ø—Ä—è–º–æ –≤ —ç—Ç–æ—Ç –±–æ—Ç.\n\n" \
           "–ú—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ–ø–æ–≤–µ—Å—Ç–∏–º –∑–∞—Ä–∞–Ω–µ–µ –∏ —Ç—ã —Ç–æ—á–Ω–æ –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—à—å! –î–æ –≤—Å—Ç—Ä–µ—á–∏ 20 –∏—é–Ω—è‚ù§\nÔ∏è" \
           "–ê —Å–µ–π—á–∞—Å –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–µ–±–∏–Ω–∞—Ä ¬´–ö–∞–∫ –ø—Ä–∏—Ä—É—á–∏—Ç—å —Å—Ç—Ä–∞—Ö¬ª\n\n" \
           "https://youtu.be/NN_itUaYxBI"
    if user:
        await message.answer(text=text)
    else:
        await CRUDUser.add(user=UsersSchema(user_id=message.from_user.id))
        await message.answer(text=text)

    #827543744


@dp.message_handler(IsAdmin(), commands=["1"])  # —Å–¥–ª–µ–∞—Ç—å –∑–∞ 2 –¥–Ω—è +
async def registration_start1(message: types.Message):
    text = "–ü—Ä–∏–≤–µ—Ç! –ù–∞ —Å–≤—è–∑–∏ –ï—Å–µ–Ω–∏—èü•∞ –î–æ –≤–µ–±–∏–Ω–∞—Ä–∞ 2 –¥–Ω—è, –Ω–∞–¥–µ—é—Å—å, —Ç—ã –Ω–µ —Å–∫—É—á–∞–µ—à—å!\n" \
           "–£ –º–µ–Ω—è –¥–ª—è —Ç–µ–±—è –µ—â–µ –æ–¥–∏–Ω –ø–æ–¥–∞—Ä–æ–∫!"
    tasks = []
    link = "https://www.youtube.com/watch?v=dq-Ixul691U&feature=youtu.be&ab_channel=%D0%95%D1%81%D0%B5%D0%BD%D0%B8%D1%8F%D0%A1%D0%B5%D1%80%D0%B3%D0%B5%D0%B5%D0%B2%D0%B0"
    users = await CRUDUser.get_all()
    for user in users:
        tasks.append(bot.send_message(chat_id=user.user_id,
                                      text=text,
                                      reply_markup=await MainForms.gift(link=link, text='–°–∫–æ—Ä–µ–µ –∂–º–∏ ¬´–ø–æ–¥–∞—Ä–æ–∫¬ª')))

    await asyncio.gather(*tasks, return_exceptions=True)  # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤—Å–µ–º –∞–¥–º–∏–Ω–∞–º —Å—Ä–∞–∑—É


@dp.message_handler(IsAdmin(), commands=["2"])  # —Å–¥–µ–ª–∞—Ç—å –≤ —ç—Ç–æ—Ç –¥–µ–Ω—å –≤ 10:00 +
async def registration_start2(message: types.Message):
    text = "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ—Ç –¥–µ–Ω—å –Ω–∞—Å—Ç–∞–ª! –í—Å—Ç—Ä–µ—á–∞–µ–º—Å—è —Å–µ–≥–æ–¥–Ω—è –≤ 19.00 –ø–æ –º—Å–∫‚ù§Ô∏è\n" \
           "–ß—Ç–æ –±—É–¥–µ—Ç –Ω–∞ –≤–µ–±–∏–Ω–∞—Ä–µ?\n" \
           "üí°–ü–æ—á–µ–º—É —Å—Ç–æ–∏—Ç –≤—ã–≤–æ–¥–∏—Ç—å –±–∏–∑–Ω–µ—Å –≤ –∏–Ω—Å—Ç–∞–≥—Ä–∞–º?\n" \
           "üí°–û—Ç–∫—É–¥–∞ —Ç–∞–º –±–µ—Ä—É—Ç—Å—è –∫–ª–∏–µ–Ω—Ç—ã?\n" \
           "üí°–ö–∞–∫ —É–ø–∞–∫–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å, —á—Ç–æ–±—ã –ø–æ–∫—É–ø–∞–ª–∏?\n" \
           "üí°–ö–∞–∫ –≤—ã–¥–µ–ª–∏—Ç—å—Å—è —Å—Ä–µ–¥–∏ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤?\n" \
           "üí°–ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –º–æ–Ω–µ—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç?\n" \
           "üí°–ö–∞–∫ —Ä–µ–≥—É–ª—è—Ä–Ω–æ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –ª—é–±–∏–º–æ–º –¥–µ–ª–µ?\n\n" \
           "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è! –î–∞–º –ø–æ—à–∞–≥–æ–≤—É—é —Å—Ö–µ–º—É –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –ø—Ä–æ–¥–∞–∂ –≤ –ª—é–±–æ–π –Ω–∏—à–µ –≤ –∏–Ω—Å—Ç–∞–≥—Ä–∞–ºüî•\n" \
           "–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—é –ø—Ä–∏–¥–µ—Ç –∑–∞ —á–∞—Å –¥–æ –≤–µ–±–∏–Ω–∞—Ä–∞"

    tasks = []
    users = await CRUDUser.get_all()
    for user in users:
        tasks.append(bot.send_message(chat_id=user.user_id,
                                      text=text))

    await asyncio.gather(*tasks, return_exceptions=True)  # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤—Å–µ–º –∞–¥–º–∏–Ω–∞–º —Å—Ä–∞–∑—É


@dp.message_handler(IsAdmin(), commands=["3"])  # –∑–∞ —á–∞—Å –¥–æ –Ω–∞—á–∞–ª–∞ +
async def registration_start3(message: types.Message):
    text = "–≠—Ç–æ —Å–Ω–æ–≤–∞ —è, –ï—Å–µ–Ω–∏—è –°–µ—Ä–≥–µ–µ–≤–∞. –£–∂–µ —á–µ—Ä–µ–∑ —á–∞—Å –≤—Å—Ç—Ä–µ—á–∞–µ–º—Å—è —Å –≤–∞–º–∏ –Ω–∞ –º–æ–µ–º –≤–µ–±–∏–Ω–∞—Ä–µ ¬´–ö–ª–∏–µ–Ω—Ç—ã –∏–∑ –∏–Ω—Å—Ç–∞–≥—Ä–∞–º¬ª\n"
    tasks = []
    link = CONFIG.ADDCOURSE.LINK
    users = await CRUDUser.get_all()
    for user in users:
        tasks.append(bot.send_message(chat_id=user.user_id,
                                      text=text,
                                      reply_markup=await MainForms.gift(link=link,
                                                                        text="‚ÄºÔ∏è–í–æ—Ç –≤–∞—à–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –≤–µ–±–∏–Ω–∞—Ä–Ω—É—é –∫–æ–º–Ω–∞—Ç—É ‚û°")))

    await asyncio.gather(*tasks, return_exceptions=True)


@dp.message_handler(IsAdmin(), commands=["4"])  # –∑–∞ 15 –º–∏–Ω—É—Ç #–î–æ–±–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É —á–µ—Ä–µ–∑ Config
async def registration_start4(message: types.Message):
    text = "–í–µ–±–∏–Ω–∞—Ä –Ω–∞—á–Ω–µ—Ç—Å—è —á–µ—Ä–µ–∑ 15 –º–∏–Ω—É—Ç! –ù–µ –æ–ø–∞–∑–¥—ã–≤–∞–π! –ë—É–¥–µ—Ç –∂–∞—Ä–∫–æüî•\n"
    tasks = []
    link = CONFIG.ADDCOURSE.LINK
    users = await CRUDUser.get_all()
    for user in users:
        tasks.append(bot.send_message(chat_id=user.user_id,
                                      text=text,
                                      reply_markup=await MainForms.gift(link=link,
                                                                        text="–°—Å—ã–ª–∫–∞ –Ω–∞ –≤—Ö–æ–¥")))

    await asyncio.gather(*tasks, return_exceptions=True)


@dp.message_handler(IsAdmin(), commands=["5"])  # –∫–æ–≥–¥–∞ –Ω–∞—á–Ω–µ—Ç—Å—è –Ω–∞—á–Ω–µ—Ç—Å—è —É—Ä–æ–∫ –≤ 19:00 #–î–æ–±–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É —á–µ—Ä–µ–∑ Config
async def registration_start5(message: types.Message):
    text = "–ú—ã —É–∂–µ –Ω–∞—á–∞–ª–∏- –∂–¥–µ–º —Ç–µ–±—è! –ü—Ä—è–º–æ —Å–µ–π—á–∞—Å —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—é, " \
           "–∫–∞–∫–∏–µ –æ—à–∏–±–∫–∏ –¥–æ–ø—É—Å–∫–∞—é—Ç –º–∞—Å—Ç–µ—Ä–∞ –∏ —ç–∫—Å–ø–µ—Ä—Ç—ã –∏ –Ω–µ–¥–æ–ø–æ–ª—É—á–∞—é—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ –¥–µ–Ω—å–≥–∏! \n"

    tasks = []
    link = CONFIG.ADDCOURSE.LINK
    users = await CRUDUser.get_all()
    for user in users:
        tasks.append(bot.send_message(chat_id=user.user_id,
                                      text=text,
                                      reply_markup=await MainForms.gift(link=link,
                                                                        text="–ü–µ—Ä–µ—Ö–æ–¥–∏ ‚û°")))

    await asyncio.gather(*tasks, return_exceptions=True)


@dp.message_handler(IsAdmin(), commands=["6"])  # –≤–æ –≤—Ä–µ–º—è —É—Ä–æ–∫–∞ –Ω—É–∂–Ω–æ —É—Ç–æ—á–Ω–∏—Ç—å –≤—Ä–µ–º—è!!! #–î–æ–±–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É —á–µ—Ä–µ–∑ Config
async def registration_start6(message: types.Message):
    text = "–¢—ã –µ—â–µ –Ω–µ —Å –Ω–∞–º–∏? –ü—Ä—è–º–æ —Å–µ–π—á–∞—Å —è —Ä–∞–∑–±–∏—Ä–∞—é –ø–æ—ç—Ç–∞–ø–Ω—É—é —Å—Ö–µ–º—É –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å 1000$ –≤ –º–µ—Å—è—Ü –Ω–∞ –±—Ä–æ–≤–∫–∞—Ö, " \
           "–∞ –ø–æ–∑–∂–µ –ø–µ—Ä–µ–π–¥—É –∫ —Ä–∞–∑–±–æ—Ä—É –ø—Ä–æ–¥–∞–∂–∏ –∫—É—Ä—Å–æ–≤.\n" \
           "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è!\n"

    tasks = []
    link = CONFIG.ADDCOURSE.LINK
    users = await CRUDUser.get_all()
    for user in users:
        tasks.append(bot.send_message(chat_id=user.user_id,
                                      text=text, reply_markup=await MainForms.gift(link=link,
                                                                                   text="–í–æ—Ç —Å—Å—ã–ª–∫–∞ –≤ –≤–µ–±–∏–Ω–∞—Ä–Ω—É—é –∫–æ–º–Ω–∞—Ç—É")))

    await asyncio.gather(*tasks, return_exceptions=True)


@dp.message_handler(IsAdmin(), commands=["7"])  # –≤ –∫–æ–Ω—Ü–µ —É—Ä–æ–∫–∞!!!
async def registration_start7(message: types.Message):
    text = "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Å–Ω–æ–≤–∞ —è, –ï—Å–µ–Ω–∏—è –°–µ—Ä–≥–µ–µ–≤–∞. –¢–æ–ª—å–∫–æ —á—Ç–æ —è —Ä–∞—Å—Å–∫–∞–∑–∞–ª–∞ –æ —Ç–æ–º, " \
           "–∫–∞–∫ –ø–æ–ª—É—á–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏–∑ –∏–Ω—Å—Ç–∞–≥—Ä–∞–º –≤ —Ç–µ–æ—Ä–∏–∏.\n" \
           "–ù–æ –±–∏–∑–Ω–µ—Å- —ç—Ç–æ —Ä–µ–≥—É–ª—è—Ä–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –∏ —Å–∏—Å—Ç–µ–º–∞!\n" \
           "–ò–º–µ–Ω–Ω–æ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ–º —Ç–∞–∫–æ–π —Å–∏—Å—Ç–µ–º—ã –º—ã –±—É–¥–µ–º –∑–∞–Ω–∏–º–∞—Ç—å—Å—è –Ω–∞ –º–æ–µ–º –∫—É—Ä—Å–µ UP.\n" \
           "–ö—É—Ä—Å —Å—Ç–∞—Ä—Ç—É–µ—Ç 7 –∏—é–ª—è. –û–ø–ª–∞—Ç–∏—Ç—å –µ–≥–æ –º–æ–∂–Ω–æ –≤ —Ä–∞—Å—Å—Ä–æ—á–∫—Éüî•\n" \
           "–î–ª—è —ç—Ç–æ–≥–æ –∑–∞–±—Ä–æ–Ω–∏—Ä—É–π—Ç–µ –º–µ—Å—Ç–æ –Ω–∞ –∫—É—Ä—Å–µ –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π —Ü–µ–Ω–µ –≤ —Ç–µ—á–µ–Ω–∏–µ —Å—É—Ç–æ–∫‚¨áÔ∏è"

    tasks = []
    link = "https://eseniyasergeeva.by"
    users = await CRUDUser.get_all()
    for user in users:
        tasks.append(bot.send_message(chat_id=user.user_id,
                                      text=text,
                                      reply_markup=await MainForms.gift(link=link,
                                                                        text="–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –º–µ—Å—Ç–æ")))

    await asyncio.gather(*tasks, return_exceptions=True)


@dp.message_handler(IsAdmin(), commands=["8"])  # –≤ –∫–æ–Ω—Ü–µ —É—Ä–æ–∫–∞!!!
async def registration_start8(message: types.Message):
    text = "–ò–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ, —á—Ç–æ–±—ã –æ–±—Å—É–¥–∏—Ç—å —É—á–∞—Å—Ç–∏–µ –∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã"

    tasks = []
    link = "https://t.me/esenia_sergeeva"
    users = await CRUDUser.get_all()
    for user in users:
        tasks.append(bot.send_message(chat_id=user.user_id,
                                      text=text,
                                      reply_markup=await MainForms.gift(link=link,
                                                                        text="–°—Å—ã–ª–∫–∞ –Ω–∞ –º–æ–π —Ç–≥")))

    await asyncio.gather(*tasks, return_exceptions=True)


@dp.message_handler(IsAdmin(), commands=["9"])  # –≤ –∫–æ–Ω—Ü–µ —É—Ä–æ–∫–∞!!!
async def registration_start9(message: types.Message):
    text = "–û—Å—Ç–∞–ª–æ—Å—å 12 —á–∞—Å–æ–≤ –¥–æ –ø–æ–≤—ã—à–µ–Ω–∏—è —Ü–µ–Ω—ã!\n" \
           "–ü—Ä–∏–≤–µ—Ç! –ß–µ—Ä–µ–∑ 12 —á–∞—Å–æ–≤ —Ü–µ–Ω–∞ –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ –≤—ã—Ä–∞—Å—Ç–µ—Ç –∏ —Ç—ã –µ—â–µ —É—Å–ø–µ–≤–∞–µ—à—å –∑–∞–ø—Ä—ã–≥–Ω—É—Ç—å –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–∞–≥–æ–Ω!\n" \
           "–£—Å–ø–µ–≤–∞–π –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –º–µ—Å—Ç–æ –ø–æ –ø—Ä–∏—è—Ç–Ω–æ–π —Ü–µ–Ω–µ –∏ –ø—Ä–∏—Ö–æ–¥–∏ –≤—ã—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –±–∏–∑–Ω–µ—Å –∏–∑ —Å–≤–æ–µ–≥–æ " \
           "–ª—é–±–∏–º–æ–≥–æ –¥–µ–ª–∞ –Ω–∞ –∫—É—Ä—Å ¬´UP¬ª\n" \
           "–ö—É—Ä—Å —Å—Ç–∞—Ä—Ç—É–µ—Ç 7 –∏—é–ª—è.\n" \
           "–û–ø–ª–∞—Ç–∏—Ç—å –µ–≥–æ –º–æ–∂–Ω–æ –≤ —Ä–∞—Å—Å—Ä–æ—á–∫—É." \

    tasks = []
    link = "https://eseniyasergeeva.by"
    users = await CRUDUser.get_all()
    for user in users:
        tasks.append(bot.send_message(chat_id=user.user_id,
                                      text=text,
                                      reply_markup=await MainForms.gift(link=link, text="–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –º–µ—Å—Ç–æ")))

    await asyncio.gather(*tasks, return_exceptions=True)


@dp.message_handler(IsAdmin(), commands=["10"])  # –≤ –∫–æ–Ω—Ü–µ —É—Ä–æ–∫–∞!!!
async def registration_start10(message: types.Message):
    text = "–û—Å—Ç–∞–ª–æ—Å—å –≤—Å–µ–≥–æ 3 —á–∞—Å–∞..\n" \
           "–°–∫–æ–ª—å–∫–æ –º–æ–∂–Ω–æ –æ—Ç–∫–ª–∞–¥—ã–≤–∞—Ç—å —Å–≤–æ–∏ –∂–µ–ª–∞–Ω–∏—è? –ñ–∏–∑–Ω—å - —ç—Ç–æ —Ç–æ, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∑–¥–µ—Å—å –∏ —Å–µ–π—á–∞—Å!\n" \
           "–ß–µ—Ä–µ–∑ 3 —á–∞—Å–∞ —Å–ø–µ—Ü–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è, –ø–æ—ç—Ç–æ–º—É —É—Å–ø–µ–≤–∞–π –∑–∞–±—Ä–∞—Ç—å —Å–≤–æ–π –ø–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–Ω—Å –∏ " \
           "–∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –º–µ—Å—Ç–æ –Ω–∞ –∫—É—Ä—Å!\n" \
           "–ù–∞–ª–∏—á–∏–µ –º–µ—Å—Ç:\n" \
           "‚ú®–° –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π 3\n" \
           "‚ú®VIP —Å –ï—Å–µ–Ω–∏–µ–π 2\n\n" \
           "–ë—Ä–æ–Ω–∏—Ä—É–π —Å–≤–æ–µ –º–µ—Å—Ç–æ, –æ–ø–ª–∞—á–∏–≤–∞–π –≤ —Ä–∞—Å—Å—Ä–æ—á–∫—É –∏ –Ω–∞—á–Ω–µ–º —Å—Ç—Ä–æ–∏—Ç—å –¥–µ–ª–æ –º–µ—á—Ç—ã, –ø—Ä–∏–Ω–æ—Å—è—â–µ–µ –¥–µ–Ω—å–≥–∏, " \
           "–∞ –Ω–µ –ø—Ä–æ–±–ª–µ–º—ã ‚ù§Ô∏è\n" \
           "–°—Ç–∞—Ä—Ç—É–µ–º 7 –∏—é–ª—è! –ó–∞–ø—Ä—ã–≥–∏–≤–∞–π " \

    tasks = []
    link = "https://eseniyasergeeva.by"
    users = await CRUDUser.get_all()
    for user in users:
        tasks.append(bot.send_message(chat_id=user.user_id,
                                      text=text,
                                      reply_markup=await MainForms.gift(link=link, text="–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–∞–π—Ç")))

    await asyncio.gather(*tasks, return_exceptions=True)


@dp.message_handler(IsAdmin(), commands=["link"])  # –≤ –∫–æ–Ω—Ü–µ —É—Ä–æ–∫–∞!!!
async def registration_startLink(message: types.Message):
    await message.answer(text='–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É:')
    await UserStates.Ping.set()


@dp.message_handler(state=UserStates.Ping)
async def process_numberPing(message: types.Message, state: FSMContext):
    try:
        CONFIG.ADDCOURSE.LINK = message.text
        await state.finish()
    except ValueError:
        await message.answer("–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞. link")
        return


@dp.message_handler(IsAdmin(), commands=["gettxt"])  # –≤ –∫–æ–Ω—Ü–µ —É—Ä–æ–∫–∞!!!
async def registration_startGetTXT(message: types.Message):
    await message.answer(text='–í–≤–µ–¥–∏—Ç–µ text')
    await UserStates.Description.set()


@dp.message_handler(state=UserStates.Description)
async def process_numberDescription(message: types.Message, state: FSMContext):
    try:
        tasks = []
        users = await CRUDUser.get_all()
        for user in users:
            tasks.append(bot.send_message(chat_id=user.user_id,
                                          text=message.text))

        await asyncio.gather(*tasks, return_exceptions=True)

        await state.finish()
    except ValueError:
        await message.answer("–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ text")
        return


@dp.message_handler(IsAdmin(), commands=["gettxtb"])  # –≤ –∫–æ–Ω—Ü–µ —É—Ä–æ–∫–∞!!!
async def registration_startgettxtb(message: types.Message):
    await message.answer(text='–í–≤–µ–¥–∏—Ç–µ text c –∫–Ω–æ–ø–∫–æ–π')
    await UserStates.DescriptionB.set()


@dp.message_handler(state=UserStates.DescriptionB)
async def process_numberDescriptionB(message: types.Message, state: FSMContext):
    try:
        CONFIG.ADDCOURSE.DESCRIPTION = message.text
        tasks = []
        users = await CRUDUser.get_all()
        for user in users:
            tasks.append(bot.send_message(chat_id=user.user_id,
                                          text=message.text,
                                          reply_markup=await MainForms.gift(link=CONFIG.ADDCOURSE.LINK,
                                                                            text="–°—Å—ã–ª–∫–∞")))

        await asyncio.gather(*tasks, return_exceptions=True)

        await state.finish()
    except ValueError:
        await message.answer("–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ text")
        return


@dp.callback_query_handler(main_cb.filter())
@dp.callback_query_handler(main_cb.filter(), state=UserStates.all_states)
async def process_callback(callback: types.CallbackQuery, state: FSMContext = None):
    await MainForms.process(callback=callback, state=state)


@dp.message_handler(state=UserStates.all_states, content_types=["text"])
async def process_message(message: types.Message, state: FSMContext):
    await MainForms.process(message=message, state=state)
